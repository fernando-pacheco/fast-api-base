[tool.poetry]
name = "fast-api-base"
version = "0.1.0"
description = ""
authors = ["Fernando Pacheco <fernando.pacheco@zooxsmart.com>"]
readme = "README.md"
packages = [{ include = "src" }]


[tool.poetry.dependencies]
python = "^3.13"
hypercorn = { extras = ["h2", "quic", "uvloop"], version = "^0.17.3" }
fastapi = "^0.116.1"
requests = "^2.32.4"
ecs-logging = "^2.2.0"
pydantic = { extras = ["email"], version = "^2.11.7" }
pyjwt = "^2.10.1"
sqlalchemy = { extras = ["asyncio"], version = "^2.0.41" }
asyncpg = "^0.30.0"
alembic = "^1.16.4"
passlib = { extras = ["bcrypt"], version = "^1.7.4" }
pydantic-settings = "^2.10.1"
bcrypt = ">=3.1,<4"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.6.0"
commitizen = "^3.20.0"
black = "^24.2.0"
ruff = "^0.3.0"
isort = "^5.13.2"
pytest = "^8.4.1"
pytest-cov = "^6.1.2"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.commitizen]
name = "cz_conventional_commits"
version = "0.0.1"
tag_format = "v$version"
version_files = ["pyproject.toml:version"]


[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''


[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88


[tool.ruff]
line-length = 88
target-version = "py312"


[tool.ruff.lint]
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
]
ignore = ["B008"]


[tool.ruff.lint.isort]
known-first-party = ["src", "tests"]
force-single-line = false
combine-as-imports = true
